/*Copyright (c) 2015-2016 redhound.net All Rights Reserved.
 This software is the confidential and proprietary information of redhound.net You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with redhound.net*/

package com.roverpoc.rovermar01.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.roverpoc.rovermar01.*;

/**
 * Service object for domain model class Control.
 * @see com.roverpoc.rovermar01.Control
 */

public interface ControlService {
   /**
	 * Creates a new control.
	 * 
	 * @param created
	 *            The information of the created control.
	 * @return The created control.
	 */
	public Control create(Control created);

	/**
	 * Deletes a control.
	 * 
	 * @param controlId
	 *            The id of the deleted control.
	 * @return The deleted control.
	 * @throws EntityNotFoundException
	 *             if no control is found with the given id.
	 */
	public Control delete(Integer controlId) throws EntityNotFoundException;

	/**
	 * Finds all controls.
	 * 
	 * @return A list of controls.
	 */
	public Page<Control> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<Control> findAll(Pageable pageable);
	
	/**
	 * Finds control by id.
	 * 
	 * @param id
	 *            The id of the wanted control.
	 * @return The found control. If no control is found, this method returns
	 *         null.
	 */
	public Control findById(Integer id) throws EntityNotFoundException;
	/**
	 * Updates the information of a control.
	 * 
	 * @param updated
	 *            The information of the updated control.
	 * @return The updated control.
	 * @throws EntityNotFoundException
	 *             if no control is found with given id.
	 */
	public Control update(Control updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the controls in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the control.
	 */

	public long countAll();


    public Page<Control> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

