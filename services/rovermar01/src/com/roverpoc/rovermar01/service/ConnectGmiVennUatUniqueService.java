/*Copyright (c) 2015-2016 redhound.net All Rights Reserved.
 This software is the confidential and proprietary information of redhound.net You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with redhound.net*/

package com.roverpoc.rovermar01.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import java.math.BigDecimal;


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.roverpoc.rovermar01.*;

/**
 * Service object for domain model class ConnectGmiVennUatUnique.
 * @see com.roverpoc.rovermar01.ConnectGmiVennUatUnique
 */

public interface ConnectGmiVennUatUniqueService {
   /**
	 * Creates a new connectgmivennuatunique.
	 * 
	 * @param created
	 *            The information of the created connectgmivennuatunique.
	 * @return The created connectgmivennuatunique.
	 */
	public ConnectGmiVennUatUnique create(ConnectGmiVennUatUnique created);

	/**
	 * Deletes a connectgmivennuatunique.
	 * 
	 * @param connectgmivennuatuniqueId
	 *            The id of the deleted connectgmivennuatunique.
	 * @return The deleted connectgmivennuatunique.
	 * @throws EntityNotFoundException
	 *             if no connectgmivennuatunique is found with the given id.
	 */
	public ConnectGmiVennUatUnique delete(BigDecimal connectgmivennuatuniqueId) throws EntityNotFoundException;

	/**
	 * Finds all connectgmivennuatuniques.
	 * 
	 * @return A list of connectgmivennuatuniques.
	 */
	public Page<ConnectGmiVennUatUnique> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<ConnectGmiVennUatUnique> findAll(Pageable pageable);
	
	/**
	 * Finds connectgmivennuatunique by id.
	 * 
	 * @param id
	 *            The id of the wanted connectgmivennuatunique.
	 * @return The found connectgmivennuatunique. If no connectgmivennuatunique is found, this method returns
	 *         null.
	 */
	public ConnectGmiVennUatUnique findById(BigDecimal id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a connectgmivennuatunique.
	 * 
	 * @param updated
	 *            The information of the updated connectgmivennuatunique.
	 * @return The updated connectgmivennuatunique.
	 * @throws EntityNotFoundException
	 *             if no connectgmivennuatunique is found with given id.
	 */
	public ConnectGmiVennUatUnique update(ConnectGmiVennUatUnique updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the connectgmivennuatuniques in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the connectgmivennuatunique.
	 */

	public long countAll();


    public Page<ConnectGmiVennUatUnique> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

