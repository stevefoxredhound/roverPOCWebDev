/*Copyright (c) 2015-2016 redhound.net All Rights Reserved.
 This software is the confidential and proprietary information of redhound.net You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with redhound.net*/

package com.roverpoc.rovermar01.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import java.math.BigDecimal;


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.roverpoc.rovermar01.*;

/**
 * Service object for domain model class ConnectGmiVennProdTotal.
 * @see com.roverpoc.rovermar01.ConnectGmiVennProdTotal
 */

public interface ConnectGmiVennProdTotalService {
   /**
	 * Creates a new connectgmivennprodtotal.
	 * 
	 * @param created
	 *            The information of the created connectgmivennprodtotal.
	 * @return The created connectgmivennprodtotal.
	 */
	public ConnectGmiVennProdTotal create(ConnectGmiVennProdTotal created);

	/**
	 * Deletes a connectgmivennprodtotal.
	 * 
	 * @param connectgmivennprodtotalId
	 *            The id of the deleted connectgmivennprodtotal.
	 * @return The deleted connectgmivennprodtotal.
	 * @throws EntityNotFoundException
	 *             if no connectgmivennprodtotal is found with the given id.
	 */
	public ConnectGmiVennProdTotal delete(BigDecimal connectgmivennprodtotalId) throws EntityNotFoundException;

	/**
	 * Finds all connectgmivennprodtotals.
	 * 
	 * @return A list of connectgmivennprodtotals.
	 */
	public Page<ConnectGmiVennProdTotal> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<ConnectGmiVennProdTotal> findAll(Pageable pageable);
	
	/**
	 * Finds connectgmivennprodtotal by id.
	 * 
	 * @param id
	 *            The id of the wanted connectgmivennprodtotal.
	 * @return The found connectgmivennprodtotal. If no connectgmivennprodtotal is found, this method returns
	 *         null.
	 */
	public ConnectGmiVennProdTotal findById(BigDecimal id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a connectgmivennprodtotal.
	 * 
	 * @param updated
	 *            The information of the updated connectgmivennprodtotal.
	 * @return The updated connectgmivennprodtotal.
	 * @throws EntityNotFoundException
	 *             if no connectgmivennprodtotal is found with given id.
	 */
	public ConnectGmiVennProdTotal update(ConnectGmiVennProdTotal updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the connectgmivennprodtotals in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the connectgmivennprodtotal.
	 */

	public long countAll();


    public Page<ConnectGmiVennProdTotal> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

