/*Copyright (c) 2015-2016 redhound.net All Rights Reserved.
 This software is the confidential and proprietary information of redhound.net You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with redhound.net*/

package com.roverpoc.rovermar01.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import java.math.BigDecimal;


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.roverpoc.rovermar01.*;

/**
 * Service object for domain model class ConnectGmiVennProdUnique.
 * @see com.roverpoc.rovermar01.ConnectGmiVennProdUnique
 */

public interface ConnectGmiVennProdUniqueService {
   /**
	 * Creates a new connectgmivennprodunique.
	 * 
	 * @param created
	 *            The information of the created connectgmivennprodunique.
	 * @return The created connectgmivennprodunique.
	 */
	public ConnectGmiVennProdUnique create(ConnectGmiVennProdUnique created);

	/**
	 * Deletes a connectgmivennprodunique.
	 * 
	 * @param connectgmivennproduniqueId
	 *            The id of the deleted connectgmivennprodunique.
	 * @return The deleted connectgmivennprodunique.
	 * @throws EntityNotFoundException
	 *             if no connectgmivennprodunique is found with the given id.
	 */
	public ConnectGmiVennProdUnique delete(BigDecimal connectgmivennproduniqueId) throws EntityNotFoundException;

	/**
	 * Finds all connectgmivennproduniques.
	 * 
	 * @return A list of connectgmivennproduniques.
	 */
	public Page<ConnectGmiVennProdUnique> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<ConnectGmiVennProdUnique> findAll(Pageable pageable);
	
	/**
	 * Finds connectgmivennprodunique by id.
	 * 
	 * @param id
	 *            The id of the wanted connectgmivennprodunique.
	 * @return The found connectgmivennprodunique. If no connectgmivennprodunique is found, this method returns
	 *         null.
	 */
	public ConnectGmiVennProdUnique findById(BigDecimal id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a connectgmivennprodunique.
	 * 
	 * @param updated
	 *            The information of the updated connectgmivennprodunique.
	 * @return The updated connectgmivennprodunique.
	 * @throws EntityNotFoundException
	 *             if no connectgmivennprodunique is found with given id.
	 */
	public ConnectGmiVennProdUnique update(ConnectGmiVennProdUnique updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the connectgmivennproduniques in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the connectgmivennprodunique.
	 */

	public long countAll();


    public Page<ConnectGmiVennProdUnique> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

