/*Copyright (c) 2015-2016 redhound.net All Rights Reserved.
 This software is the confidential and proprietary information of redhound.net You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with redhound.net*/

package com.roverpoc.rovermar01.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import java.math.BigDecimal;


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.roverpoc.rovermar01.*;

/**
 * Service object for domain model class ConnectGmiVennBoth.
 * @see com.roverpoc.rovermar01.ConnectGmiVennBoth
 */

public interface ConnectGmiVennBothService {
   /**
	 * Creates a new connectgmivennboth.
	 * 
	 * @param created
	 *            The information of the created connectgmivennboth.
	 * @return The created connectgmivennboth.
	 */
	public ConnectGmiVennBoth create(ConnectGmiVennBoth created);

	/**
	 * Deletes a connectgmivennboth.
	 * 
	 * @param connectgmivennbothId
	 *            The id of the deleted connectgmivennboth.
	 * @return The deleted connectgmivennboth.
	 * @throws EntityNotFoundException
	 *             if no connectgmivennboth is found with the given id.
	 */
	public ConnectGmiVennBoth delete(BigDecimal connectgmivennbothId) throws EntityNotFoundException;

	/**
	 * Finds all connectgmivennboths.
	 * 
	 * @return A list of connectgmivennboths.
	 */
	public Page<ConnectGmiVennBoth> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<ConnectGmiVennBoth> findAll(Pageable pageable);
	
	/**
	 * Finds connectgmivennboth by id.
	 * 
	 * @param id
	 *            The id of the wanted connectgmivennboth.
	 * @return The found connectgmivennboth. If no connectgmivennboth is found, this method returns
	 *         null.
	 */
	public ConnectGmiVennBoth findById(BigDecimal id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a connectgmivennboth.
	 * 
	 * @param updated
	 *            The information of the updated connectgmivennboth.
	 * @return The updated connectgmivennboth.
	 * @throws EntityNotFoundException
	 *             if no connectgmivennboth is found with given id.
	 */
	public ConnectGmiVennBoth update(ConnectGmiVennBoth updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the connectgmivennboths in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the connectgmivennboth.
	 */

	public long countAll();


    public Page<ConnectGmiVennBoth> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

